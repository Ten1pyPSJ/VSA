import ccxt
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from datetime import datetime
import time
from collections import deque

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
SYMBOL = 'BTC/USDT'  # –ü–∞—Ä–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
TIMEFRAME = '4h'     # –¢–∞–π–º—Ñ—Ä–µ–π–º
EXCHANGE = 'binance' # –ë–∏—Ä–∂–∞
LOOKBACK = 100       # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–µ—á–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
ORDERBOOK_DEPTH = 10 # –ì–ª—É–±–∏–Ω–∞ —Å—Ç–∞–∫–∞–Ω–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞

class MarketRadar:
    def __init__(self):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∏—Ä–∂–µ
        self.exchange = getattr(ccxt, EXCHANGE)()
        self.exchange.load_markets()
        self.orderbook_history = deque(maxlen=20)  # –ò—Å—Ç–æ—Ä–∏—è —Å—Ç–∞–∫–∞–Ω–æ–≤
        self.market_state = {
            'trend': None,
            'strength': None,
            'phase': None,
            'activity': None,
            'volatility': None,
            'context': None
        }
        
    def fetch_ohlcv(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ OHLCV –¥–∞–Ω–Ω—ã—Ö"""
        try:
            ohlcv = self.exchange.fetch_ohlcv(SYMBOL, TIMEFRAME, limit=LOOKBACK)
            df = pd.DataFrame(ohlcv, columns=['timestamp', 'open', 'high', 'low', 'close', 'volume'])
            df['timestamp'] = pd.to_datetime(df['timestamp'], unit='ms')
            df.set_index('timestamp', inplace=True)
            return df
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
            return None
    
    def fetch_orderbook(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞–∫–∞–Ω–∞ –æ—Ä–¥–µ—Ä–æ–≤"""
        try:
            orderbook = self.exchange.fetch_order_book(SYMBOL, limit=ORDERBOOK_DEPTH)
            self.orderbook_history.append(orderbook)
            return orderbook
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞–∫–∞–Ω–∞: {e}")
            return None
    
    def calculate_indicators(self, df):
        """–†–∞—Å—á–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –¥–ª—è VSA"""
        # –û–±—ä–µ–º–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
        df['volume_sma_20'] = df['volume'].rolling(window=20).mean()
        df['volume_ratio'] = df['volume'] / df['volume_sma_20']
        
        # –ê–Ω–∞–ª–∏–∑ —Å–≤–µ—á–µ–π
        df['range'] = df['high'] - df['low']
        df['avg_range'] = df['range'].rolling(window=20).mean()
        df['close_position'] = (df['close'] - df['low']) / df['range']
        df['body_ratio'] = abs(df['close'] - df['open']) / df['range']
        df['upper_shadow'] = (df['high'] - np.maximum(df['open'], df['close'])) / df['range']
        df['lower_shadow'] = (np.minimum(df['open'], df['close']) - df['low']) / df['range']
        
        # –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å
        df['volatility'] = df['range'].rolling(window=14).mean() / df['close'].rolling(window=14).mean() * 100
        
        # –£—Ä–æ–≤–Ω–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏/—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è
        df['support'] = df['low'].rolling(window=5).min()
        df['resistance'] = df['high'].rolling(window=5).max()
        
        return df
    
    def analyze_market_state(self, df):
        """–ê–Ω–∞–ª–∏–∑ –æ–±—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä—ã–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ VSA"""
        last = df.iloc[-1]
        prev = df.iloc[-2]
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç—Ä–µ–Ω–¥–∞ –ø–æ –æ–±—ä–µ–º—É –∏ –∑–∞–∫—Ä—ã—Ç–∏—é
        if last['close'] > prev['close'] and last['volume_ratio'] > 1.2:
            self.market_state['trend'] = '–í–æ—Å—Ö–æ–¥—è—â–∏–π'
        elif last['close'] < prev['close'] and last['volume_ratio'] > 1.2:
            self.market_state['trend'] = '–ù–∏—Å—Ö–æ–¥—è—â–∏–π'
        else:
            self.market_state['trend'] = '–ë–æ–∫–æ–≤–æ–π'
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–∏–ª—ã —Ç—Ä–µ–Ω–¥–∞
        if last['volume_ratio'] > 2.0:
            self.market_state['strength'] = '–°–∏–ª—å–Ω—ã–π'
        elif last['volume_ratio'] > 1.5:
            self.market_state['strength'] = '–£–º–µ—Ä–µ–Ω–Ω—ã–π'
        else:
            self.market_state['strength'] = '–°–ª–∞–±—ã–π'
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–∞–∑—ã —Ä—ã–Ω–∫–∞
        if last['close'] > last['open'] and last['volume_ratio'] > 1.5 and last['close_position'] > 0.7:
            self.market_state['phase'] = '–ê–∫–∫—É–º—É–ª—è—Ü–∏—è'
        elif last['close'] < last['open'] and last['volume_ratio'] > 1.5 and last['close_position'] < 0.3:
            self.market_state['phase'] = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ'
        else:
            self.market_state['phase'] = '–ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è'
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        if last['volume_ratio'] > 2.0:
            self.market_state['activity'] = '–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'
        elif last['volume_ratio'] > 1.5:
            self.market_state['activity'] = '–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'
        else:
            self.market_state['activity'] = '–ù–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'
            
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
        if last['volatility'] > 3:
            self.market_state['volatility'] = '–í—ã—Å–æ–∫–∞—è'
        elif last['volatility'] > 1.5:
            self.market_state['volatility'] = '–£–º–µ—Ä–µ–Ω–Ω–∞—è'
        else:
            self.market_state['volatility'] = '–ù–∏–∑–∫–∞—è'
            
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä—ã–Ω–æ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        if (self.market_state['trend'] == '–í–æ—Å—Ö–æ–¥—è—â–∏–π' and 
            self.market_state['phase'] == '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ'):
            self.market_state['context'] = '–ö–æ—Ä—Ä–µ–∫—Ü–∏—è –ø–æ—Å–ª–µ —Ä–æ—Å—Ç–∞'
        elif (self.market_state['trend'] == '–ù–∏—Å—Ö–æ–¥—è—â–∏–π' and 
              self.market_state['phase'] == '–ê–∫–∫—É–º—É–ª—è—Ü–∏—è'):
            self.market_state['context'] = '–û—Ç—Å–∫–æ–∫ –ø–æ—Å–ª–µ –ø–∞–¥–µ–Ω–∏—è'
        elif self.market_state['trend'] == '–ë–æ–∫–æ–≤–æ–π':
            self.market_state['context'] = '–ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è'
        else:
            self.market_state['context'] = '–¢—Ä–µ–Ω–¥–æ–≤–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ'
    
    def analyze_orderbook(self, orderbook):
        """–£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç–∞–∫–∞–Ω–∞ –æ—Ä–¥–µ—Ä–æ–≤"""
        if not orderbook or len(self.orderbook_history) < 5:
            return []
        
        bids = orderbook['bids']
        asks = orderbook['asks']
        
        # –†–∞—Å—á–µ—Ç —Å—É–º–º–∞—Ä–Ω–æ–≥–æ –æ–±—ä–µ–º–∞ –≤ —Å—Ç–∞–∫–∞–Ω–µ
        total_bid_volume = sum([bid[1] for bid in bids])
        total_ask_volume = sum([ask[1] for ask in asks])
        
        # –ê–Ω–∞–ª–∏–∑ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏
        liquidity_ratio = total_bid_volume / total_ask_volume
        
        signals = []
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–∏–ª—ã/—Å–ª–∞–±–æ—Å—Ç–∏ –ø–æ —Å—Ç–∞–∫–∞–Ω—É
        if liquidity_ratio > 2.0:
            signals.append(f"–û—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π —Å–ø—Ä–æ—Å –≤ —Å—Ç–∞–∫–∞–Ω–µ (—Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ {liquidity_ratio:.1f})")
        elif liquidity_ratio > 1.5:
            signals.append(f"–°–∏–ª—å–Ω—ã–π —Å–ø—Ä–æ—Å –≤ —Å—Ç–∞–∫–∞–Ω–µ (—Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ {liquidity_ratio:.1f})")
        elif liquidity_ratio < 0.5:
            signals.append(f"–û—á–µ–Ω—å —Å–∏–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ —Å—Ç–∞–∫–∞–Ω–µ (—Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ {liquidity_ratio:.1f})")
        elif liquidity_ratio < 0.67:
            signals.append(f"–°–∏–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ —Å—Ç–∞–∫–∞–Ω–µ (—Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ {liquidity_ratio:.1f})")
        
        # –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞–∫–∞–Ω–∞
        prev_orderbook = self.orderbook_history[-2] if len(self.orderbook_history) > 1 else None
        if prev_orderbook:
            prev_bid = prev_orderbook['bids'][0][0] if prev_orderbook['bids'] else 0
            prev_ask = prev_orderbook['asks'][0][0] if prev_orderbook['asks'] else 0
            current_bid = bids[0][0] if bids else 0
            current_ask = asks[0][0] if asks else 0
            
            if current_bid > prev_ask:
                signals.append("–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏ - —Ü–µ–Ω–∞ –ø—Ä–æ–±–∏–ª–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π ask")
            elif current_ask < prev_bid:
                signals.append("–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏ - —Ü–µ–Ω–∞ –ø—Ä–æ–±–∏–ª–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π bid")
        
        return signals
    
    def vsa_analysis(self, df):
        """–£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ VSA (Volume Spread Analysis)"""
        last_candle = df.iloc[-1]
        prev_candle = df.iloc[-2]
        prev_prev_candle = df.iloc[-3]
        
        signals = []
        details = []
        
        # 1. –°–∏–ª—å–Ω—ã–π —Å–ø—Ä–æ—Å (–≤–æ—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥)
        if (last_candle['close'] > last_candle['open'] and 
            last_candle['volume_ratio'] > 1.5 and 
            last_candle['range'] > last_candle['avg_range'] and
            last_candle['close_position'] > 0.7 and
            last_candle['body_ratio'] > 0.5 and
            last_candle['lower_shadow'] < 0.2):
            signals.append(f"üìà –°–∏–ª—å–Ω—ã–π —Å–ø—Ä–æ—Å (–æ–±—ä–µ–º x{last_candle['volume_ratio']:.1f}, –∫—Ä—É–ø–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã)")
            details.append("üîπ –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã–ª–∞—Å—å –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Å –±–æ–ª—å—à–∏–º –æ–±—ä–µ–º–æ–º")
            details.append("üîπ –®–∏—Ä–æ–∫–∞—è —Å–≤–µ—á–∞ —Å –º–∞–ª–µ–Ω—å–∫–æ–π –Ω–∏–∂–Ω–µ–π —Ç–µ–Ω—å—é")
            details.append("üîπ –ü–æ–∫—É–ø–∞—Ç–µ–ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç —Å–∏—Ç—É–∞—Ü–∏—é")
            details.append("üîπ –°–∏–≥–Ω–∞–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å–≤–µ—á–∞ –±—ã–ª–∞ –Ω–∏—Å—Ö–æ–¥—è—â–µ–π")
        
        # 2. –°–ª–∞–±–æ—Å—Ç—å –Ω–∞ –ø–æ–¥—ä–µ–º–µ (–≤–æ–∑–º–æ–∂–Ω—ã–π —Ä–∞–∑–≤–æ—Ä–æ—Ç)
        elif (last_candle['close'] > last_candle['open'] and 
              last_candle['volume_ratio'] < 0.7 and 
              last_candle['range'] > last_candle['avg_range'] and
              last_candle['body_ratio'] < 0.3 and
              last_candle['upper_shadow'] > 0.5):
            signals.append(f"‚ö†Ô∏è –°–ª–∞–±–æ—Å—Ç—å –Ω–∞ –ø–æ–¥—ä–µ–º–µ (–æ–±—ä–µ–º x{last_candle['volume_ratio']:.1f}, –ø–æ–∫—É–ø–∞—Ç–µ–ª–∏ –≤—ã–¥—ã—Ö–∞—é—Ç—Å—è)")
            details.append("üîπ –¶–µ–Ω–∞ –≤—ã—Ä–æ—Å–ª–∞, –Ω–æ –æ–±—ä–µ–º –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ")
            details.append("üîπ –ë–æ–ª—å—à–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω —Å –º–∞–ª–µ–Ω—å–∫–∏–º —Ç–µ–ª–æ–º –∏ –¥–ª–∏–Ω–Ω–æ–π –≤–µ—Ä—Ö–Ω–µ–π —Ç–µ–Ω—å—é")
            details.append("üîπ –ü–æ–∫—É–ø–∞—Ç–µ–ª–∏ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç –¥–≤–∏–∂–µ–Ω–∏–µ")
            details.append("üîπ –û—Å–æ–±–µ–Ω–Ω–æ —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª –ø–æ—Å–ª–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞")
        
        # 3. –°–∏–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ (–Ω–∏—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥)
        elif (last_candle['close'] < last_candle['open'] and 
              last_candle['volume_ratio'] > 1.5 and 
              last_candle['range'] > last_candle['avg_range'] and
              last_candle['close_position'] < 0.3 and
              last_candle['body_ratio'] > 0.5 and
              last_candle['upper_shadow'] < 0.2):
            signals.append(f"üìâ –°–∏–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ (–æ–±—ä–µ–º x{last_candle['volume_ratio']:.1f}, –∫—Ä—É–ø–Ω—ã–µ –ø—Ä–æ–¥–∞–≤—Ü—ã –∞–∫—Ç–∏–≤–Ω—ã)")
            details.append("üîπ –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã–ª–∞—Å—å –≤ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Å –±–æ–ª—å—à–∏–º –æ–±—ä–µ–º–æ–º")
            details.append("üîπ –®–∏—Ä–æ–∫–∞—è –º–µ–¥–≤–µ–∂—å—è —Å–≤–µ—á–∞ —Å –º–∞–ª–µ–Ω—å–∫–æ–π –≤–µ—Ä—Ö–Ω–µ–π —Ç–µ–Ω—å—é")
            details.append("üîπ –ü—Ä–æ–¥–∞–≤—Ü—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç —Å–∏—Ç—É–∞—Ü–∏—é")
            details.append("üîπ –°–∏–≥–Ω–∞–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å–≤–µ—á–∞ –±—ã–ª–∞ –≤–æ—Å—Ö–æ–¥—è—â–µ–π")
        
        # 4. –°–ª–∞–±–æ—Å—Ç—å –Ω–∞ –ø–∞–¥–µ–Ω–∏–∏ (–≤–æ–∑–º–æ–∂–Ω—ã–π —Ä–∞–∑–≤–æ—Ä–æ—Ç)
        elif (last_candle['close'] < last_candle['open'] and 
              last_candle['volume_ratio'] < 0.7 and 
              last_candle['range'] > last_candle['avg_range'] and
              last_candle['body_ratio'] < 0.3 and
              last_candle['lower_shadow'] > 0.5):
            signals.append(f"‚ö†Ô∏è –°–ª–∞–±–æ—Å—Ç—å –Ω–∞ –ø–∞–¥–µ–Ω–∏–∏ (–æ–±—ä–µ–º x{last_candle['volume_ratio']:.1f}, –ø—Ä–æ–¥–∞–≤—Ü—ã –≤—ã–¥—ã—Ö–∞—é—Ç—Å—è)")
            details.append("üîπ –¶–µ–Ω–∞ —É–ø–∞–ª–∞, –Ω–æ –æ–±—ä–µ–º –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ")
            details.append("üîπ –ë–æ–ª—å—à–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω —Å –º–∞–ª–µ–Ω—å–∫–∏–º —Ç–µ–ª–æ–º –∏ –¥–ª–∏–Ω–Ω–æ–π –Ω–∏–∂–Ω–µ–π —Ç–µ–Ω—å—é")
            details.append("üîπ –ü—Ä–æ–¥–∞–≤—Ü—ã –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç –¥–≤–∏–∂–µ–Ω–∏–µ")
            details.append("üîπ –û—Å–æ–±–µ–Ω–Ω–æ —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª –ø–æ—Å–ª–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∞–¥–µ–Ω–∏—è")
        
        # 5. –¢–µ—Å—Ç –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
        elif (last_candle['close'] < prev_candle['close'] and
              last_candle['volume'] > last_candle['volume_sma_20'] * 1.5 and
              last_candle['close'] > (last_candle['high'] + last_candle['low']) / 2 and
              last_candle['range'] > last_candle['avg_range'] and
              last_candle['upper_shadow'] > 0.3):
            signals.append("üîç –¢–µ—Å—Ç –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ - –∫—Ä—É–ø–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç —É—Ä–æ–≤–µ–Ω—å")
            details.append("üîπ –ë–æ–ª—å—à–æ–π –æ–±—ä–µ–º –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —É—Ä–æ–≤–Ω—è —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è")
            details.append("üîπ –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã–ª–∞—Å—å –≤—ã—à–µ —Å–µ—Ä–µ–¥–∏–Ω—ã –¥–∏–∞–ø–∞–∑–æ–Ω–∞")
            details.append("üîπ –î–ª–∏–Ω–Ω–∞—è –≤–µ—Ä—Ö–Ω—è—è —Ç–µ–Ω—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç–∫–∞–∑ –æ—Ç —É—Ä–æ–≤–Ω—è")
            details.append("üîπ –í–æ–∑–º–æ–∂–Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∏—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
        
        # 6. –¢–µ—Å—Ç –Ω–∞ —Å–ø—Ä–æ—Å
        elif (last_candle['close'] > prev_candle['close'] and
              last_candle['volume'] > last_candle['volume_sma_20'] * 1.5 and
              last_candle['close'] < (last_candle['high'] + last_candle['low']) / 2 and
              last_candle['range'] > last_candle['avg_range'] and
              last_candle['lower_shadow'] > 0.3):
            signals.append("üîç –¢–µ—Å—Ç –Ω–∞ —Å–ø—Ä–æ—Å - –∫—Ä—É–ø–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç —É—Ä–æ–≤–µ–Ω—å")
            details.append("üîπ –ë–æ–ª—å—à–æ–π –æ–±—ä–µ–º –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —É—Ä–æ–≤–Ω—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏")
            details.append("üîπ –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã–ª–∞—Å—å –Ω–∏–∂–µ —Å–µ—Ä–µ–¥–∏–Ω—ã –¥–∏–∞–ø–∞–∑–æ–Ω–∞")
            details.append("üîπ –î–ª–∏–Ω–Ω–∞—è –Ω–∏–∂–Ω—è—è —Ç–µ–Ω—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç–∫–∞–∑ –æ—Ç —É—Ä–æ–≤–Ω—è")
            details.append("üîπ –í–æ–∑–º–æ–∂–Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–æ—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
        
        # 7. –ê–±—Å–æ—Ä–±—Ü–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π
        elif (last_candle['close'] < last_candle['open'] and
              last_candle['volume'] > last_candle['volume_sma_20'] * 2.5 and
              last_candle['close'] == last_candle['low'] and
              last_candle['body_ratio'] > 0.8 and
              prev_candle['close'] > prev_candle['open']):
            signals.append("üõë –ê–±—Å–æ—Ä–±—Ü–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π - —Å–∏–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤")
            details.append("üîπ –û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –æ–±—ä–µ–º –Ω–∞ –Ω–∏—Å—Ö–æ–¥—è—â–µ–π —Å–≤–µ—á–µ")
            details.append("üîπ –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã–ª–∞—Å—å –Ω–∞ –º–∏–Ω–∏–º—É–º–µ –±–µ–∑ –Ω–∏–∂–Ω–µ–π —Ç–µ–Ω–∏")
            details.append("üîπ –ü—Ä–æ–¥–∞–≤—Ü—ã –ø–æ–≥–ª–æ—Ç–∏–ª–∏ –≤—Å–µ—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π")
            details.append("üîπ –û—Å–æ–±–µ–Ω–Ω–æ —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª –ø–æ—Å–ª–µ –≤–æ—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
        
        # 8. –ê–±—Å–æ—Ä–±—Ü–∏—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
        elif (last_candle['close'] > last_candle['open'] and
              last_candle['volume'] > last_candle['volume_sma_20'] * 2.5 and
              last_candle['close'] == last_candle['high'] and
              last_candle['body_ratio'] > 0.8 and
              prev_candle['close'] < prev_candle['open']):
            signals.append("üõë –ê–±—Å–æ—Ä–±—Ü–∏—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ - —Å–∏–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π")
            details.append("üîπ –û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –æ–±—ä–µ–º –Ω–∞ –≤–æ—Å—Ö–æ–¥—è—â–µ–π —Å–≤–µ—á–µ")
            details.append("üîπ –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã–ª–∞—Å—å –Ω–∞ –º–∞–∫—Å–∏–º—É–º–µ –±–µ–∑ –≤–µ—Ä—Ö–Ω–µ–π —Ç–µ–Ω–∏")
            details.append("üîπ –ü–æ–∫—É–ø–∞—Ç–µ–ª–∏ –ø–æ–≥–ª–æ—Ç–∏–ª–∏ –≤—Å–µ—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤")
            details.append("üîπ –û—Å–æ–±–µ–Ω–Ω–æ —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª –ø–æ—Å–ª–µ –Ω–∏—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
        
        # 9. –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ (—É–ª—É—á—à–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è)
        elif (last_candle['range'] < last_candle['avg_range'] * 0.6 and
              last_candle['volume'] > last_candle['volume_sma_20'] * 1.8 and
              abs(last_candle['close'] - last_candle['open']) / last_candle['range'] < 0.2 and
              last_candle['upper_shadow'] > 0.3 and
              last_candle['lower_shadow'] > 0.3 and
              prev_candle['volume'] < prev_candle['volume_sma_20']):
            signals.append("üîÑ –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ - –∫—Ä—É–ø–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –Ω–∞–±–∏—Ä–∞—é—Ç –ø–æ–∑–∏—Ü–∏–∏")
            details.append("üîπ –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω —Å –æ—á–µ–Ω—å –±–æ–ª—å—à–∏–º –æ–±—ä–µ–º–æ–º")
            details.append("üîπ –î–ª–∏–Ω–Ω—ã–µ —Ç–µ–Ω–∏ —Å –æ–±–µ–∏—Ö —Å—Ç–æ—Ä–æ–Ω (–¥–æ–¥–∂–∏ –∏–ª–∏ –º–∞–ª–µ–Ω—å–∫–æ–µ —Ç–µ–ª–æ)")
            details.append("üîπ –ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ–±—ä–µ–º –±—ã–ª –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ")
            details.append("üîπ –ö—Ä—É–ø–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –∞–∫–∫—É–º—É–ª–∏—Ä—É—é—Ç –ø–æ–∑–∏—Ü–∏–∏")
        
        # 10. –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (—É–ª—É—á—à–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è)
        elif (last_candle['range'] < last_candle['avg_range'] * 0.6 and
              last_candle['volume'] > last_candle['volume_sma_20'] * 1.8 and
              abs(last_candle['close'] - last_candle['open']) / last_candle['range'] < 0.2 and
              last_candle['upper_shadow'] > 0.3 and
              last_candle['lower_shadow'] > 0.3 and
              prev_candle['volume'] > prev_candle['volume_sma_20'] * 1.5 and
              prev_candle['close'] > prev_candle['open']):
            signals.append("üîÑ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ - –∫—Ä—É–ø–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –∑–∞–∫—Ä—ã–≤–∞—é—Ç –ø–æ–∑–∏—Ü–∏–∏")
            details.append("üîπ –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω —Å –æ—á–µ–Ω—å –±–æ–ª—å—à–∏–º –æ–±—ä–µ–º–æ–º")
            details.append("üîπ –î–ª–∏–Ω–Ω—ã–µ —Ç–µ–Ω–∏ —Å –æ–±–µ–∏—Ö —Å—Ç–æ—Ä–æ–Ω (–¥–æ–¥–∂–∏ –∏–ª–∏ –º–∞–ª–µ–Ω—å–∫–æ–µ —Ç–µ–ª–æ)")
            details.append("üîπ –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–≤–µ—á–∞ –±—ã–ª–∞ –≤–æ—Å—Ö–æ–¥—è—â–µ–π —Å –±–æ–ª—å—à–∏–º –æ–±—ä–µ–º–æ–º")
            details.append("üîπ –ö—Ä—É–ø–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ —Ä–∞—Å–ø—Ä–æ–¥–∞—é—Ç –ø–æ–∑–∏—Ü–∏–∏")
        
        # 11. –£—Å–∏–ª–µ–Ω–∏–µ —Å–ø—Ä–æ—Å–∞ (—É–ª—É—á—à–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è)
        elif (last_candle['close'] > last_candle['open'] and
              last_candle['volume_ratio'] > 1.5 and
              last_candle['volume_ratio'] > prev_candle['volume_ratio'] and
              last_candle['close'] > prev_candle['close'] and
              prev_candle['close'] > prev_candle['open'] and
              prev_candle['volume_ratio'] > 1.2):
            signals.append("üìà –£—Å–∏–ª–µ–Ω–∏–µ —Å–ø—Ä–æ—Å–∞ - –æ–±—ä–µ–º—ã —Ä–∞—Å—Ç—É—Ç –≤–º–µ—Å—Ç–µ —Å —Ü–µ–Ω–æ–π")
            details.append("üîπ –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–±—ä–µ–º–∞ –∏ —Ü–µ–Ω—ã")
            details.append("üîπ –¢–µ–∫—É—â–∞—è –∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å–≤–µ—á–∏ –≤–æ—Å—Ö–æ–¥—è—â–∏–µ —Å –æ–±—ä–µ–º–æ–º –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ")
            details.append("üîπ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–æ—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
            details.append("üîπ –í—Ö–æ–¥ –≤ –ø–æ–∑–∏—Ü–∏—é –Ω–∞ –æ—Ç–∫–∞—Ç–∞—Ö")
        
        # 12. –£—Å–∏–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (—É–ª—É—á—à–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è)
        elif (last_candle['close'] < last_candle['open'] and
              last_candle['volume_ratio'] > 1.5 and
              last_candle['volume_ratio'] > prev_candle['volume_ratio'] and
              last_candle['close'] < prev_candle['close'] and
              prev_candle['close'] < prev_candle['open'] and
              prev_candle['volume_ratio'] > 1.2):
            signals.append("üìâ –£—Å–∏–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è - –æ–±—ä–µ–º—ã —Ä–∞—Å—Ç—É—Ç –≤–º–µ—Å—Ç–µ —Å –ø–∞–¥–µ–Ω–∏–µ–º —Ü–µ–Ω—ã")
            details.append("üîπ –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–±—ä–µ–º–∞ –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ —Ü–µ–Ω—ã")
            details.append("üîπ –¢–µ–∫—É—â–∞—è –∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å–≤–µ—á–∏ –Ω–∏—Å—Ö–æ–¥—è—â–∏–µ —Å –æ–±—ä–µ–º–æ–º –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ")
            details.append("üîπ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∏—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
            details.append("üîπ –í—Ö–æ–¥ –≤ –ø–æ–∑–∏—Ü–∏—é –Ω–∞ –æ—Ç–∫–∞—Ç–∞—Ö")
        
        return signals, details
    
    def candle_patterns(self, df):
        """–£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–≤–µ—á–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π —Å —É—á–µ—Ç–æ–º –æ–±—ä–µ–º–∞"""
        last_candle = df.iloc[-1]
        prev_candle = df.iloc[-2]
        prev_prev_candle = df.iloc[-3]
        
        patterns = []
        details = []
        
        # –ú–æ–ª–æ—Ç (—É–ª—É—á—à–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è)
        if (last_candle['close'] > last_candle['open'] and 
            last_candle['body_ratio'] < 0.3 and 
            last_candle['lower_shadow'] > 0.6 and
            last_candle['upper_shadow'] < 0.1 and
            last_candle['volume_ratio'] > 1.2 and
            last_candle['low'] == min(last_candle['low'], prev_candle['low'], prev_prev_candle['low'])):
            patterns.append("üî® –ú–æ–ª–æ—Ç —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ–±—ä–µ–º–∞ - —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞ –≤–≤–µ—Ä—Ö")
            details.append("üîπ –ú–∞–ª–µ–Ω—å–∫–æ–µ —Ç–µ–ª–æ –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞")
            details.append("üîπ –î–ª–∏–Ω–Ω–∞—è –Ω–∏–∂–Ω—è—è —Ç–µ–Ω—å (–º–∏–Ω–∏–º—É–º 2/3 –¥–∏–∞–ø–∞–∑–æ–Ω–∞)")
            details.append("üîπ –ü–æ—á—Ç–∏ –Ω–µ—Ç –≤–µ—Ä—Ö–Ω–µ–π —Ç–µ–Ω–∏")
            details.append("üîπ –û–±—ä–µ–º –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Å–∏–≥–Ω–∞–ª")
            details.append("üîπ –ü–æ—è–≤–∏–ª—Å—è –ø–æ—Å–ª–µ –Ω–∏—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
        
        # –ü–æ–≤–µ—à–µ–Ω–Ω—ã–π (—É–ª—É—á—à–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è)
        elif (last_candle['close'] < last_candle['open'] and 
              last_candle['body_ratio'] < 0.3 and 
              last_candle['upper_shadow'] > 0.6 and
              last_candle['lower_shadow'] < 0.1 and
              last_candle['volume_ratio'] > 1.2 and
              last_candle['high'] == max(last_candle['high'], prev_candle['high'], prev_prev_candle['high'])):
            patterns.append("ü™¢ –ü–æ–≤–µ—à–µ–Ω–Ω—ã–π —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ–±—ä–µ–º–∞ - —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞ –≤–Ω–∏–∑")
            details.append("üîπ –ú–∞–ª–µ–Ω—å–∫–æ–µ —Ç–µ–ª–æ –≤ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞")
            details.append("üîπ –î–ª–∏–Ω–Ω–∞—è –≤–µ—Ä—Ö–Ω—è—è —Ç–µ–Ω—å (–º–∏–Ω–∏–º—É–º 2/3 –¥–∏–∞–ø–∞–∑–æ–Ω–∞)")
            details.append("üîπ –ü–æ—á—Ç–∏ –Ω–µ—Ç –Ω–∏–∂–Ω–µ–π —Ç–µ–Ω–∏")
            details.append("üîπ –û–±—ä–µ–º –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Å–∏–≥–Ω–∞–ª")
            details.append("üîπ –ü–æ—è–≤–∏–ª—Å—è –ø–æ—Å–ª–µ –≤–æ—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
        
        # –ü–æ–≥–ª–æ—â–µ–Ω–∏–µ (—É–ª—É—á—à–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è)
        if (last_candle['close'] > prev_candle['open'] and 
            last_candle['open'] < prev_candle['close'] and 
            last_candle['close'] > prev_candle['close'] and 
            last_candle['open'] < prev_candle['open'] and
            last_candle['volume_ratio'] > 1.5 and
            prev_candle['volume_ratio'] < 0.8):
            patterns.append("üü¢ –ë—ã—á—å–µ –ø–æ–≥–ª–æ—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ–±—ä–µ–º–∞ - –æ—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª")
            details.append("üîπ –¢–µ–∫—É—â–∞—è —Å–≤–µ—á–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é '–ø–æ–≥–ª–æ—Ç–∏–ª–∞' –ø—Ä–µ–¥—ã–¥—É—â—É—é")
            details.append("üîπ –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—ã—à–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–≤–µ—á–∏")
            details.append("üîπ –ë–æ–ª—å—à–æ–π –æ–±—ä–µ–º –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å–≤–µ—á–µ –∏ –º–∞–ª—ã–π –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π")
            details.append("üîπ –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–≤–µ—á–∞ –±—ã–ª–∞ –Ω–∏—Å—Ö–æ–¥—è—â–µ–π")
            details.append("üîπ –õ—É—á—à–∏–π —Å–∏–≥–Ω–∞–ª –ø–æ—Å–ª–µ –Ω–∏—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
        elif (last_candle['close'] < prev_candle['open'] and 
              last_candle['open'] > prev_candle['close'] and 
              last_candle['close'] < prev_candle['close'] and 
              last_candle['open'] > prev_candle['open'] and
              last_candle['volume_ratio'] > 1.5 and
              prev_candle['volume_ratio'] < 0.8):
            patterns.append("üî¥ –ú–µ–¥–≤–µ–∂—å–µ –ø–æ–≥–ª–æ—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ–±—ä–µ–º–∞ - –æ—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª")
            details.append("üîπ –¢–µ–∫—É—â–∞—è —Å–≤–µ—á–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é '–ø–æ–≥–ª–æ—Ç–∏–ª–∞' –ø—Ä–µ–¥—ã–¥—É—â—É—é")
            details.append("üîπ –ó–∞–∫—Ä—ã—Ç–∏–µ –Ω–∏–∂–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–≤–µ—á–∏")
            details.append("üîπ –ë–æ–ª—å—à–æ–π –æ–±—ä–µ–º –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å–≤–µ—á–µ –∏ –º–∞–ª—ã–π –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π")
            details.append("üîπ –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–≤–µ—á–∞ –±—ã–ª–∞ –≤–æ—Å—Ö–æ–¥—è—â–µ–π")
            details.append("üîπ –õ—É—á—à–∏–π —Å–∏–≥–Ω–∞–ª –ø–æ—Å–ª–µ –≤–æ—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
        
        # –£—Ç—Ä–µ–Ω–Ω—è—è –∑–≤–µ–∑–¥–∞ (—É–ª—É—á—à–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è)
        if (prev_candle['close'] < prev_candle['open'] and
            prev_candle['body_ratio'] > 0.7 and
            last_candle['close'] > last_candle['open'] and
            last_candle['open'] < prev_candle['close'] and
            last_candle['body_ratio'] > 0.5 and
            prev_prev_candle['close'] < prev_prev_candle['open'] and
            last_candle['volume_ratio'] > 1.5 and
            prev_candle['volume_ratio'] < 0.7):
            patterns.append("üåü –£—Ç—Ä–µ–Ω–Ω—è—è –∑–≤–µ–∑–¥–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ–±—ä–µ–º–∞ - —Å–∏–ª—å–Ω—ã–π –±—ã—á–∏–π —Ä–∞–∑–≤–æ—Ä–æ—Ç")
            details.append("üîπ –ü–æ—Å–ª–µ –Ω–∏—Å—Ö–æ–¥—è—â–µ–π —Å–≤–µ—á–∏ –∏–¥–µ—Ç —Å–≤–µ—á–∞ —Å –º–∞–ª–µ–Ω—å–∫–∏–º —Ç–µ–ª–æ–º –∏ –º–∞–ª—ã–º –æ–±—ä–µ–º–æ–º")
            details.append("üîπ –ó–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è —Å–∏–ª—å–Ω–æ–π –≤–æ—Å—Ö–æ–¥—è—â–µ–π —Å–≤–µ—á–æ–π —Å –±–æ–ª—å—à–∏–º –æ–±—ä–µ–º–æ–º")
            details.append("üîπ –í—Å–µ —Ç—Ä–∏ —Å–≤–µ—á–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç —Ä–∞–∑–≤–æ—Ä–æ—Ç")
            details.append("üîπ –õ—É—á—à–∏–π —Å–∏–≥–Ω–∞–ª –ø–æ—Å–ª–µ —á–µ—Ç–∫–æ–≥–æ –Ω–∏—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
        
        # –í–µ—á–µ—Ä–Ω—è—è –∑–≤–µ–∑–¥–∞ (—É–ª—É—á—à–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è)
        elif (prev_candle['close'] > prev_candle['open'] and
              prev_candle['body_ratio'] > 0.7 and
              last_candle['close'] < last_candle['open'] and
              last_candle['open'] > prev_candle['close'] and
              last_candle['body_ratio'] > 0.5 and
              prev_prev_candle['close'] > prev_prev_candle['open'] and
              last_candle['volume_ratio'] > 1.5 and
              prev_candle['volume_ratio'] < 0.7):
            patterns.append("üåô –í–µ—á–µ—Ä–Ω—è—è –∑–≤–µ–∑–¥–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ–±—ä–µ–º–∞ - —Å–∏–ª—å–Ω—ã–π –º–µ–¥–≤–µ–∂–∏–π —Ä–∞–∑–≤–æ—Ä–æ—Ç")
            details.append("üîπ –ü–æ—Å–ª–µ –≤–æ—Å—Ö–æ–¥—è—â–µ–π —Å–≤–µ—á–∏ –∏–¥–µ—Ç —Å–≤–µ—á–∞ —Å –º–∞–ª–µ–Ω—å–∫–∏–º —Ç–µ–ª–æ–º –∏ –º–∞–ª—ã–º –æ–±—ä–µ–º–æ–º")
            details.append("üîπ –ó–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è —Å–∏–ª—å–Ω–æ–π –Ω–∏—Å—Ö–æ–¥—è—â–µ–π —Å–≤–µ—á–æ–π —Å –±–æ–ª—å—à–∏–º –æ–±—ä–µ–º–æ–º")
            details.append("üîπ –í—Å–µ —Ç—Ä–∏ —Å–≤–µ—á–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç —Ä–∞–∑–≤–æ—Ä–æ—Ç")
            details.append("üîπ –õ—É—á—à–∏–π —Å–∏–≥–Ω–∞–ª –ø–æ—Å–ª–µ —á–µ—Ç–∫–æ–≥–æ –≤–æ—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
        
        # –ü–∏–Ω-–±–∞—Ä (—É–ª—É—á—à–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è)
        if (last_candle['body_ratio'] < 0.3 and
            last_candle['upper_shadow'] > 0.7 and
            last_candle['lower_shadow'] < 0.1 and
            last_candle['volume_ratio'] > 1.3 and
            prev_candle['close'] < prev_candle['open']):
            patterns.append("üìå –ú–µ–¥–≤–µ–∂–∏–π –ø–∏–Ω-–±–∞—Ä —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ–±—ä–µ–º–∞ - —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª")
            details.append("üîπ –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–æ–µ —Ç–µ–ª–æ –≤ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞")
            details.append("üîπ –û—á–µ–Ω—å –¥–ª–∏–Ω–Ω–∞—è –≤–µ—Ä—Ö–Ω—è—è —Ç–µ–Ω—å (70% –∏ –±–æ–ª–µ–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞)")
            details.append("üîπ –ü–æ—á—Ç–∏ –Ω–µ—Ç –Ω–∏–∂–Ω–µ–π —Ç–µ–Ω–∏")
            details.append("üîπ –û–±—ä–µ–º –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Å–∏–≥–Ω–∞–ª")
            details.append("üîπ –ü–æ—è–≤–∏–ª—Å—è –ø–æ—Å–ª–µ –Ω–∏—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
        elif (last_candle['body_ratio'] < 0.3 and
              last_candle['lower_shadow'] > 0.7 and
              last_candle['upper_shadow'] < 0.1 and
              last_candle['volume_ratio'] > 1.3 and
              prev_candle['close'] > prev_candle['open']):
            patterns.append("üìå –ë—ã—á–∏–π –ø–∏–Ω-–±–∞—Ä —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ–±—ä–µ–º–∞ - —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª")
            details.append("üîπ –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–æ–µ —Ç–µ–ª–æ –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞")
            details.append("üîπ –û—á–µ–Ω—å –¥–ª–∏–Ω–Ω–∞—è –Ω–∏–∂–Ω—è—è —Ç–µ–Ω—å (70% –∏ –±–æ–ª–µ–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞)")
            details.append("üîπ –ü–æ—á—Ç–∏ –Ω–µ—Ç –≤–µ—Ä—Ö–Ω–µ–π —Ç–µ–Ω–∏")
            details.append("üîπ –û–±—ä–µ–º –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Å–∏–≥–Ω–∞–ª")
            details.append("üîπ –ü–æ—è–≤–∏–ª—Å—è –ø–æ—Å–ª–µ –≤–æ—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
        
        return patterns, details
    
    def generate_market_commentary(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Ä—ã–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ VSA"""
        commentary = []
        details = []
        
        # –û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        commentary.append(f"\nüìå –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä—ã–Ω–∫–∞ (VSA –∞–Ω–∞–ª–∏–∑):")
        commentary.append(f"üìä –¢—Ä–µ–Ω–¥: {self.market_state['trend']}")
        commentary.append(f"üí™ –°–∏–ª–∞: {self.market_state['strength']}")
        commentary.append(f"üîÑ –§–∞–∑–∞: {self.market_state['phase']}")
        commentary.append(f"üèÉ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {self.market_state['activity']}")
        commentary.append(f"üå™Ô∏è –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: {self.market_state['volatility']}")
        commentary.append(f"üìå –ö–æ–Ω—Ç–µ–∫—Å—Ç: {self.market_state['context']}")
        
        # –î–µ—Ç–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        details.append("\nüîç –î–µ—Ç–∞–ª–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è:")
        
        if self.market_state['trend'] == '–í–æ—Å—Ö–æ–¥—è—â–∏–π':
            details.append("üîπ –†—ã–Ω–æ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–æ—Å—Ö–æ–¥—è—â–µ–º —Ç—Ä–µ–Ω–¥–µ –ø–æ VSA")
            if self.market_state['strength'] == '–°–∏–ª—å–Ω—ã–π':
                details.append("üîπ –°–∏–ª—å–Ω—ã–µ –æ–±—ä–µ–º—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç —Ç—Ä–µ–Ω–¥")
                details.append("üîπ –ò—â–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞ –æ—Ç–∫–∞—Ç–∞—Ö")
            elif self.market_state['strength'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π':
                details.append("üîπ –£–º–µ—Ä–µ–Ω–Ω—ã–µ –æ–±—ä–µ–º—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Ç—Ä–µ–Ω–¥")
                details.append("üîπ –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã —Å –Ω–æ–≤—ã–º–∏ –≤—Ö–æ–¥–∞–º–∏")
            else:
                details.append("üîπ –°–ª–∞–±—ã–µ –æ–±—ä–µ–º—ã - —Ç—Ä–µ–Ω–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–¥ —É–≥—Ä–æ–∑–æ–π")
                details.append("üîπ –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º")
        elif self.market_state['trend'] == '–ù–∏—Å—Ö–æ–¥—è—â–∏–π':
            details.append("üîπ –†—ã–Ω–æ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–∏—Å—Ö–æ–¥—è—â–µ–º —Ç—Ä–µ–Ω–¥–µ –ø–æ VSA")
            if self.market_state['strength'] == '–°–∏–ª—å–Ω—ã–π':
                details.append("üîπ –°–∏–ª—å–Ω—ã–µ –æ–±—ä–µ–º—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç —Ç—Ä–µ–Ω–¥")
                details.append("üîπ –ò—â–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ –æ—Ç–∫–∞—Ç–∞—Ö")
            elif self.market_state['strength'] == '–£–º–µ—Ä–µ–Ω–Ω—ã–π':
                details.append("üîπ –£–º–µ—Ä–µ–Ω–Ω—ã–µ –æ–±—ä–µ–º—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Ç—Ä–µ–Ω–¥")
                details.append("üîπ –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã —Å –Ω–æ–≤—ã–º–∏ –≤—Ö–æ–¥–∞–º–∏")
            else:
                details.append("üîπ –°–ª–∞–±—ã–µ –æ–±—ä–µ–º—ã - —Ç—Ä–µ–Ω–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–¥ —É–≥—Ä–æ–∑–æ–π")
                details.append("üîπ –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º")
        else:
            details.append("üîπ –†—ã–Ω–æ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–æ–∫–æ–≤–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏")
            details.append("üîπ –ù–µ—Ç —á–µ—Ç–∫–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ –æ–±—ä–µ–º—É")
            details.append("üîπ –ò—â–∏—Ç–µ –ø—Ä–æ–±–æ–∏ —É—Ä–æ–≤–Ω–µ–π —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ–±—ä–µ–º–∞")
        
        # –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ñ–∞–∑—ã
        if self.market_state['phase'] == '–ê–∫–∫—É–º—É–ª—è—Ü–∏—è':
            commentary.append("\n‚ÑπÔ∏è VSA –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–∞–∑—É –∞–∫–∫—É–º—É–ª—è—Ü–∏–∏. –ö—Ä—É–ø–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –Ω–∞–∫–∞–ø–ª–∏–≤–∞—é—Ç –ø–æ–∑–∏—Ü–∏–∏.")
            details.append("üîπ –û–∂–∏–¥–∞–π—Ç–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ñ–∞–∑—ã")
            details.append("üîπ –ò—â–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –≤—Ö–æ–¥–∞")
        elif self.market_state['phase'] == '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ':
            commentary.append("\n‚ÑπÔ∏è VSA –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–∞–∑—É —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è. –ö—Ä—É–ø–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ —Ä–∞—Å–ø—Ä–æ–¥–∞—é—Ç –ø–æ–∑–∏—Ü–∏–∏.")
            details.append("üîπ –û–∂–∏–¥–∞–π—Ç–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ø–∞–¥–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ñ–∞–∑—ã")
            details.append("üîπ –ò—â–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —à–æ—Ä—Ç")
        else:
            commentary.append("\n‚ÑπÔ∏è –†—ã–Ω–æ–∫ –≤ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–π —Ñ–∞–∑–µ. –ù–µ—Ç —á–µ—Ç–∫–∏—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∞–∫–∫—É–º—É–ª—è—Ü–∏–∏ –∏–ª–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è.")
            details.append("üîπ –û–∂–∏–¥–∞–π—Ç–µ –±–æ–ª–µ–µ —á–µ—Ç–∫–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤")
            details.append("üîπ –¢–æ—Ä–≥—É–π—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        if self.market_state['activity'] == '–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å':
            commentary.append("\nüí° –í—ã—Å–æ–∫–∞—è —Ç–æ—Ä–≥–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Å–∏–ª—å–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –∫—Ä—É–ø–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤.")
            details.append("üîπ –ë–æ–ª—å—à–∏–µ –æ–±—ä–µ–º—ã - –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤")
            details.append("üîπ –°–∏–ª—å–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è –±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã")
        elif self.market_state['activity'] == '–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å':
            commentary.append("\nüí° –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –∏–ª–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ.")
            details.append("üîπ –û–±—ä–µ–º—ã –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ - –≤–æ–∑–º–æ–∂–Ω—ã –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏")
            details.append("üîπ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–∏—Ç—É–∞—Ü–∏–∏")
        else:
            commentary.append("\nüí° –ù–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ–∑–Ω–∞—á–∞–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫—Ä—É–ø–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤.")
            details.append("üîπ –ú–∞–ª–µ–Ω—å–∫–∏–µ –æ–±—ä–µ–º—ã - —Å–ª–∞–±–æ–µ —É—á–∞—Å—Ç–∏–µ")
            details.append("üîπ –í–æ–∑–º–æ–∂–Ω—ã –ª–æ–∂–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è")
        
        return commentary, details
    
    def generate_recommendation(self, vsa, vsa_details, orderbook, patterns, patterns_details):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ VSA –∏ —Å–≤–µ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
        recommendation = []
        details = []
        confidence = 0
        
        # –û—Ü–µ–Ω–∫–∞ —Å–∏–ª—ã —Å–∏–≥–Ω–∞–ª–æ–≤
        bullish_signals = 0
        bearish_signals = 0
        
        # –ê–Ω–∞–ª–∏–∑ VSA (—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤–µ—Å VSA —Å–∏–≥–Ω–∞–ª–æ–≤)
        for signal in vsa:
            if "—Å–ø—Ä–æ—Å" in signal.lower() or "–ø–æ–∫—É–ø" in signal.lower() or "–±—ã—á" in signal.lower():
                bullish_signals += 3  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤–µ—Å VSA —Å–∏–≥–Ω–∞–ª–æ–≤
            elif "–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ" in signal.lower() or "–ø—Ä–æ–¥–∞–∂" in signal.lower() or "–º–µ–¥–≤–µ–∂" in signal.lower():
                bearish_signals += 3
        
        # –ê–Ω–∞–ª–∏–∑ —Å—Ç–∞–∫–∞–Ω–∞
        for signal in orderbook:
            if "—Å–ø—Ä–æ—Å" in signal.lower():
                bullish_signals += 2
            elif "–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ" in signal.lower():
                bearish_signals += 2
        
        # –ê–Ω–∞–ª–∏–∑ —Å–≤–µ—á–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
        for pattern in patterns:
            if "–±—ã—á" in pattern.lower() or "–≤–≤–µ—Ä—Ö" in pattern.lower():
                bullish_signals += 2
            elif "–º–µ–¥–≤–µ–∂" in pattern.lower() or "–≤–Ω–∏–∑" in pattern.lower():
                bearish_signals += 2
        
        # –£—á–µ—Ç —Ä—ã–Ω–æ—á–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if self.market_state['trend'] == '–í–æ—Å—Ö–æ–¥—è—â–∏–π':
            bullish_signals += 1.5
        elif self.market_state['trend'] == '–ù–∏—Å—Ö–æ–¥—è—â–∏–π':
            bearish_signals += 1.5
            
        if self.market_state['strength'] == '–°–∏–ª—å–Ω—ã–π':
            if self.market_state['trend'] == '–í–æ—Å—Ö–æ–¥—è—â–∏–π':
                bullish_signals += 1
            else:
                bearish_signals += 1
        
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        signal_diff = bullish_signals - bearish_signals
        
        if signal_diff > 6:
            recommendation.append("üü¢üü¢üü¢ –û–ß–ï–ù–¨ –°–ò–õ–¨–ù–´–ô –°–ò–ì–ù–ê–õ –ù–ê –ü–û–ö–£–ü–ö–£ (VSA)")
            confidence = min(95, 75 + signal_diff * 3)
        elif signal_diff > 4:
            recommendation.append("üü¢üü¢ –°–ò–õ–¨–ù–´–ô –°–ò–ì–ù–ê–õ –ù–ê –ü–û–ö–£–ü–ö–£ (VSA)")
            confidence = min(85, 65 + signal_diff * 4)
        elif signal_diff > 2:
            recommendation.append("üü¢ –£–º–µ—Ä–µ–Ω–Ω—ã–π —Å–∏–≥–Ω–∞–ª –Ω–∞ –ø–æ–∫—É–ø–∫—É (VSA)")
            confidence = 60 + signal_diff * 5
        elif signal_diff > 0:
            recommendation.append("üü¢ –°–ª–∞–±—ã–π —Å–∏–≥–Ω–∞–ª –Ω–∞ –ø–æ–∫—É–ø–∫—É (VSA)")
            confidence = 55 + signal_diff * 5
        elif signal_diff < -6:
            recommendation.append("üî¥üî¥üî¥ –û–ß–ï–ù–¨ –°–ò–õ–¨–ù–´–ô –°–ò–ì–ù–ê–õ –ù–ê –ü–†–û–î–ê–ñ–£ (VSA)")
            confidence = min(95, 75 + abs(signal_diff) * 3)
        elif signal_diff < -4:
            recommendation.append("üî¥üî¥ –°–ò–õ–¨–ù–´–ô –°–ò–ì–ù–ê–õ –ù–ê –ü–†–û–î–ê–ñ–£ (VSA)")
            confidence = min(85, 65 + abs(signal_diff) * 4)
        elif signal_diff < -2:
            recommendation.append("üî¥ –£–º–µ—Ä–µ–Ω–Ω—ã–π —Å–∏–≥–Ω–∞–ª –Ω–∞ –ø—Ä–æ–¥–∞–∂—É (VSA)")
            confidence = 60 + abs(signal_diff) * 5
        elif signal_diff < 0:
            recommendation.append("üî¥ –°–ª–∞–±—ã–π —Å–∏–≥–Ω–∞–ª –Ω–∞ –ø—Ä–æ–¥–∞–∂—É (VSA)")
            confidence = 55 + abs(signal_diff) * 5
        else:
            recommendation.append("‚ö™ –ù–µ—Ç —á–µ—Ç–∫–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ –ø–æ VSA")
            confidence = 50
        
        recommendation.append(f"üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence}%")
        
        # –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if confidence > 80:
            recommendation.append("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –°–∏–ª—å–Ω—ã–π VSA —Å–∏–≥–Ω–∞–ª. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤—Ö–æ–¥ –≤ —Å–¥–µ–ª–∫—É —Å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º –ø–æ–∑–∏—Ü–∏–∏.")
            details.append("üîπ –í—Ö–æ–¥ –ø–æ —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω–µ –∏–ª–∏ –Ω–∞ –æ—Ç–∫–∞—Ç–µ")
            details.append("üîπ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏")
            details.append("üîπ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å—Ç–æ–ø-–ª–æ—Å—Å –∑–∞ –±–ª–∏–∂–∞–π—à–∏–π –∑–Ω–∞—á–∏–º—ã–π —É—Ä–æ–≤–µ–Ω—å")
        elif confidence > 70:
            recommendation.append("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –•–æ—Ä–æ—à–∏–π VSA —Å–∏–≥–Ω–∞–ª. –í–æ–∑–º–æ–∂–µ–Ω –≤—Ö–æ–¥ –≤ —Å–¥–µ–ª–∫—É —Å —É–º–µ—Ä–µ–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º –ø–æ–∑–∏—Ü–∏–∏.")
            details.append("üîπ –í—Ö–æ–¥ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ —Å–∏–≥–Ω–∞–ª–∞")
            details.append("üîπ –£–º–µ—Ä–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏")
            details.append("üîπ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å—Ç–æ–ø-–ª–æ—Å—Å –∑–∞ –±–ª–∏–∂–∞–π—à–∏–π –∑–Ω–∞—á–∏–º—ã–π —É—Ä–æ–≤–µ–Ω—å")
        elif confidence > 60:
            recommendation.append("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –£–º–µ—Ä–µ–Ω–Ω—ã–π VSA —Å–∏–≥–Ω–∞–ª. –í—Ö–æ–¥ —Å —É–º–µ–Ω—å—à–µ–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º –ø–æ–∑–∏—Ü–∏–∏.")
            details.append("üîπ –û–∂–∏–¥–∞–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π")
            details.append("üîπ –£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏")
            details.append("üîπ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–æ–ª–µ–µ —à–∏—Ä–æ–∫–∏–π —Å—Ç–æ–ø-–ª–æ—Å—Å")
        elif confidence > 50:
            recommendation.append("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –°–ª–∞–±—ã–π VSA —Å–∏–≥–Ω–∞–ª. –í—Ö–æ–¥ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º –ø–æ–∑–∏—Ü–∏–∏ –∏–ª–∏ –æ–∂–∏–¥–∞–Ω–∏–µ.")
            details.append("üîπ –û–∂–∏–¥–∞–π—Ç–µ —á–µ—Ç–∫–∏—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π")
            details.append("üîπ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –∏–ª–∏ –æ–∂–∏–¥–∞–Ω–∏–µ")
        else:
            recommendation.append("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –≤–Ω–µ —Ä—ã–Ω–∫–∞. –û–∂–∏–¥–∞–π—Ç–µ –±–æ–ª–µ–µ —á–µ—Ç–∫–∏—Ö VSA —Å–∏–≥–Ω–∞–ª–æ–≤.")
            details.append("üîπ –ù–µ—Ç —á–µ—Ç–∫–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –≤—Ö–æ–¥–∞")
            details.append("üîπ –õ—É—á—à–µ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤–Ω–µ —Ä—ã–Ω–∫–∞")
        
        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞–º–∏ —Å —É—á–µ—Ç–æ–º –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
        recommendation.append("\n‚ö†Ô∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï –†–ò–°–ö–ê–ú–ò:")
        recommendation.append("- –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–æ–ø-–ª–æ—Å—Å")
        
        if self.market_state['volatility'] == '–í—ã—Å–æ–∫–∞—è':
            recommendation.append("- –†–∏—Å–∫—É–π—Ç–µ –Ω–µ –±–æ–ª–µ–µ 0.5-1% –∫–∞–ø–∏—Ç–∞–ª–∞ –Ω–∞ —Å–¥–µ–ª–∫—É –∏–∑-–∑–∞ –≤—ã—Å–æ–∫–æ–π –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏")
            recommendation.append("- –£–≤–µ–ª–∏—á—å—Ç–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞")
            details.append("üîπ –í—ã—Å–æ–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å - —É–º–µ–Ω—å—à–∏—Ç–µ —Ä–∏—Å–∫")
            details.append("üîπ –ë–æ–ª—å—à–∏–µ —Å—Ç–æ–ø—ã –∏–∑-–∑–∞ —à–∏—Ä–æ–∫–∏—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤")
        elif self.market_state['volatility'] == '–£–º–µ—Ä–µ–Ω–Ω–∞—è':
            recommendation.append("- –†–∏—Å–∫—É–π—Ç–µ 1-1.5% –∫–∞–ø–∏—Ç–∞–ª–∞ –Ω–∞ —Å–¥–µ–ª–∫—É")
            details.append("üîπ –£–º–µ—Ä–µ–Ω–Ω–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–∏—Å–∫")
        else:
            recommendation.append("- –†–∏—Å–∫—É–π—Ç–µ 1-2% –∫–∞–ø–∏—Ç–∞–ª–∞ –Ω–∞ —Å–¥–µ–ª–∫—É")
            details.append("üîπ –ù–∏–∑–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å - –º–æ–∂–Ω–æ —Ä–∏—Å–∫–æ–≤–∞—Ç—å –±–æ–ª—å—à–µ")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ VSA
        if any("—Å–ø—Ä–æ—Å" in s.lower() for s in vsa) and confidence > 60:
            recommendation.append("\nüìà VSA –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π. –ò—â–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –ª–æ–Ω–≥.")
            details.append("üîπ –ö—Ä—É–ø–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –ø–æ–∫—É–ø–∞—é—Ç - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å")
            details.append("üîπ –ò—â–∏—Ç–µ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞ –Ω–∞ –æ—Ç–∫–∞—Ç–∞—Ö –∫ —É—Ä–æ–≤–Ω—è–º –ø–æ–¥–¥–µ—Ä–∂–∫–∏")
        elif any("–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ" in s.lower() for s in vsa) and confidence > 60:
            recommendation.append("\nüìâ VSA –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–∞–≤—Ü–æ–≤. –ò—â–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —à–æ—Ä—Ç.")
            details.append("üîπ –ö—Ä—É–ø–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–æ–¥–∞—é—Ç - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å")
            details.append("üîπ –ò—â–∏—Ç–µ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞ –Ω–∞ –æ—Ç–∫–∞—Ç–∞—Ö –∫ —É—Ä–æ–≤–Ω—è–º —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è")
        
        # –î–µ—Ç–∞–ª–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
        details.append("\nüîç –î–µ—Ç–∞–ª–∏ —Å–∏–≥–Ω–∞–ª–æ–≤:")
        
        if vsa:
            details.append("\nVSA —Å–∏–≥–Ω–∞–ª—ã:")
            for signal, detail in zip(vsa, vsa_details):
                details.append(f"- {signal}")
                for d in detail.split('\n'):
                    details.append(f"  {d}")
        
        if patterns:
            details.append("\n–°–≤–µ—á–Ω—ã–µ –º–æ–¥–µ–ª–∏:")
            for pattern, pattern_detail in zip(patterns, patterns_details):
                details.append(f"- {pattern}")
                for d in pattern_detail.split('\n'):
                    details.append(f"  {d}")
        
        return recommendation, details
    
    def plot_chart(self, df, orderbook_signals):
        """–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ VSA"""
        plt.figure(figsize=(14, 12))
        
        # –¶–µ–Ω–∞ –∏ –æ–±—ä–µ–º—ã
        plt.subplot(2, 1, 1)
        
        # –í–æ—Å—Ö–æ–¥—è—â–∏–µ —Å–≤–µ—á–∏
        up = df[df['close'] >= df['open']]
        plt.bar(up.index, up['high']-up['low'], bottom=up['low'], color='green', width=0.8, alpha=0.7)
        plt.bar(up.index, up['close']-up['open'], bottom=up['open'], color='darkgreen', width=0.8)
        
        # –ù–∏—Å—Ö–æ–¥—è—â–∏–µ —Å–≤–µ—á–∏
        down = df[df['close'] < df['open']]
        plt.bar(down.index, down['high']-down['low'], bottom=down['low'], color='red', width=0.8, alpha=0.7)
        plt.bar(down.index, down['open']-down['close'], bottom=down['close'], color='darkred', width=0.8)
        
        # –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–≤–µ—á—É
        last_index = df.index[-1]
        last_close = df['close'].iloc[-1]
        plt.scatter(last_index, last_close, color='gold', s=100, zorder=5, label='–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞')
        
        # –î–æ–±–∞–≤–ª—è–µ–º —É—Ä–æ–≤–Ω–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏/—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è
        support = df['support'].iloc[-1]
        resistance = df['resistance'].iloc[-1]
        plt.axhline(y=support, color='green', linestyle=':', alpha=0.7, label='–ü–æ–¥–¥–µ—Ä–∂–∫–∞')
        plt.axhline(y=resistance, color='red', linestyle=':', alpha=0.7, label='–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ')
        
        plt.title(f'{SYMBOL} - VSA –∞–Ω–∞–ª–∏–∑ | {datetime.now().strftime("%Y-%m-%d %H:%M")}')
        plt.ylabel('–¶–µ–Ω–∞')
        plt.legend()
        plt.grid()
        
        # –û–±—ä–µ–º (–∫–æ–º–ø–∞–∫—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç)
        plt.subplot(2, 1, 2)
        
        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—ä–µ–º–æ–≤
        significant_volumes = df[df['volume_ratio'] > 1.0]
        
        # –¶–≤–µ—Ç–∞ –¥–ª—è –æ–±—ä–µ–º–æ–≤
        colors = np.where(significant_volumes['close'] >= significant_volumes['open'], 'green', 'red')
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—ä–µ–º–æ–≤
        bars = plt.bar(significant_volumes.index, significant_volumes['volume_ratio'], 
                      color=colors, width=0.8, alpha=0.7)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –æ—á–µ–Ω—å –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤
        for bar in bars:
            height = bar.get_height()
            if height > 2.0:
                plt.text(bar.get_x() + bar.get_width()/2., height,
                        f'{height:.1f}x',
                        ha='center', va='bottom', fontsize=8)
        
        # –õ–∏–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–≥–æ –æ–±—ä–µ–º–∞
        plt.axhline(y=1, color='blue', linestyle='--', linewidth=1)
        
        plt.ylabel('–û–±—ä–µ–º (–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Å—Ä–µ–¥–Ω–µ–º—É)')
        plt.legend(['–°—Ä–µ–¥–Ω–∏–π –æ–±—ä–µ–º', '–ü–æ–∫—É–ø–∫–∏', '–ü—Ä–æ–¥–∞–∂–∏'])
        plt.grid(axis='y')
        
        plt.tight_layout()
        plt.show()
    
    def run_analysis(self):
        """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
        print(f"\n{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - VSA –∞–Ω–∞–ª–∏–∑ {SYMBOL} –Ω–∞ {TIMEFRAME} —Ç–∞–π–º—Ñ—Ä–µ–π–º–µ")
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        df = self.fetch_ohlcv()
        if df is None or len(df) < 50:
            print("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
            return
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞–∫–∞–Ω–∞
        orderbook = self.fetch_orderbook()
        
        # –†–∞—Å—á–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤
        df = self.calculate_indicators(df)
        
        # –ê–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä—ã–Ω–∫–∞
        self.analyze_market_state(df)
        
        # –ê–Ω–∞–ª–∏–∑
        vsa_signals, vsa_details = self.vsa_analysis(df)
        orderbook_signals = self.analyze_orderbook(orderbook) if orderbook else []
        candle_patterns, patterns_details = self.candle_patterns(df)
        market_commentary, market_details = self.generate_market_commentary()
        recommendation, recommendation_details = self.generate_recommendation(
            vsa_signals, vsa_details, 
            orderbook_signals, 
            candle_patterns, patterns_details
        )
        
        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        print("\n=== –†–´–ù–û–ß–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï (VSA) ===")
        for line in market_commentary:
            print(line)
        
        print("\n=== –î–ï–¢–ê–õ–ò –†–´–ù–û–ß–ù–û–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø ===")
        for line in market_details:
            print(line)
        
        print("\n=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê ===")
        
        print("\nVSA –°–ò–ì–ù–ê–õ–´:")
        for signal, detail in zip(vsa_signals, vsa_details):
            print(f"- {signal}")
            for d in detail.split('\n'):
                print(f"  {d}")
        
        if orderbook_signals:
            print("\n–°–ò–ì–ù–ê–õ–´ –°–¢–ê–ö–ê–ù–ê:")
            for signal in orderbook_signals:
                print(f"- {signal}")
        
        print("\n–°–í–ï–ß–ù–´–ï –ú–û–î–ï–õ–ò:")
        for pattern, detail in zip(candle_patterns, patterns_details):
            print(f"- {pattern}")
            for d in detail.split('\n'):
                print(f"  {d}")
        
        print("\n=== –¢–û–†–ì–û–í–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò (VSA) ===")
        for rec in recommendation:
            print(rec)
        
        print("\n=== –î–ï–¢–ê–õ–ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ô ===")
        for detail in recommendation_details:
            print(detail)
        
        # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
        self.plot_chart(df, orderbook_signals)

if __name__ == "__main__":
    radar = MarketRadar()
    
    # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –∫–∞–∂–¥—ã–π —á–∞—Å
    while True:
        radar.run_analysis()
        print("\n–°–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 1 —á–∞—Å...")
        time.sleep(3600)  # –ü–∞—É–∑–∞ 1 —á–∞—Å